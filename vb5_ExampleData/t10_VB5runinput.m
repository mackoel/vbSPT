%% VB-HMM analysis parameter file generated by vbSPTgui %%

% Fredrik Persson & Martin Linden 2012-11-07

% This is a GUI generated HMM analysis runinput file, which specifies
% everything the code needs to know about how to analyze a particular data
% set.
% To run the HMM analysis manually type:
% >> VB3_HMManalysis('runinputfilename')


% Inputs
inputfile = './t10_results1.mat';
trajectoryfield = 'x';

% Computing strategy
parallelize_config = 1;
parallel_start = 'parpool';  % executed before the parallelizable loop.
parallel_end = 'delete(gcp)'; % executed after the parallelizable loop.

% Saving options
outputfile = './t10_HMMresult.mat';
jobID = 'Data from t10_HMManalysis.mat';

% Data properties
timestep = 0.003;     % in [s]
dim = 2;
trjLmin = 2;

%%% new stuff 
blur_tau=0.25;%0.25;       % first moment of exposure time distribution
blur_R=blur_tau/3;   % the blur factor R of Michalet & Berglund, for const. exposure
VBEMfunction=@VB5_VBEMiterator;        % numerical integration (slower but exakt)
%VBEMfunction=@VB5_VBEMiterator_beta0;   % analytical integration, exact when R=beta=0
%%%
% Convergence and computation alternatives
runs = 2;
maxHidden = 3;

% Evaluate extra estimates including Viterbi paths
stateEstimate = 1;

maxIter = 1000;    % maximum number of VB iterations ([]: use default values).
relTolF = 1e-4;  % convergence criterion for relative change in likelihood bound.
tolPar =  1e-2;     % convergence criterion for M-step parameters (leave non-strict).

% Bootstrapping
bootstrapNum = 10;
fullBootstrap = true;

% Limits for initial conditions
init_D = [0.01 5]*1e6;         % interval for diffusion constant initial guess [length^2/time] in same length units as the input data.
init_tD = [2 20]*timestep;     % interval for mean dwell time initial guess in [s].
init_locErr=[5 50];            % interval for localization error initial guess [length]
% It is recommended to keep the initial tD guesses on the lower end of the expected spectrum.

% Prior distributions
% Diffusion constants
prior_type_D = 'mean_strength';
prior_D = 1e6;                  % prior diffusion constant [length^2/time] in same length units as the input data.
prior_Dstrength = 2;            % strength of diffusion constant prior, number of pseudocounts (>1).

%%% new stuff %%%
% localiztion errors
prior_type_locErr ='mean_strength';
prior_locErr      =10;          % prior localization error [length] in same length units as the input data.
prior_locErrStrength=2;         % strength of localization error prior, number of pseudocounts (>1)

%%%
%% default prior choices (according nat. meth. 2013 paper)
%prior_type_Pi = 'natmet13';
%prior_piStrength = 5;  % prior strength of initial state distribution (assumed uniform) in pseudocounts.
%prior_type_A = 'natmet13';
%prior_tD = 10*timestep;      % prior dwell time in [s].
%prior_tDstrength = 2*prior_tD/timestep;  % transition rate strength (number of pseudocounts). Recommended to be at least 2*prior_tD/timestep.

%% new prior choices (for advanced users, as they are not yet systematically tested)
prior_type_Pi = 'flat';
prior_type_A = 'dwell_Bflat';
prior_tD = 10*timestep;      % prior dwell time in [s]. Must be greater than timestep (recommended > 2*timestep)
prior_tDstd = 100*prior_tD;  % standard deviation of prior dwell times [s]. 

